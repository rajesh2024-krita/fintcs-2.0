{"ast":null,"code":"import { inject } from '@angular/core';\nimport { AuthService } from '../services/auth.service';\nexport const tokenInterceptor = (req, next) => {\n  const authService = inject(AuthService);\n  const token = authService.getToken();\n  if (token) {\n    const authReq = req.clone({\n      headers: req.headers.set('Authorization', `Bearer ${token}`)\n    });\n    return next(authReq);\n  }\n  return next(req);\n};","map":{"version":3,"names":["inject","AuthService","tokenInterceptor","req","next","authService","token","getToken","authReq","clone","headers","set"],"sources":["C:\\Rajesh\\Angular\\FinTCS\\fintcs-new\\fintcs-2.0\\src\\app\\core\\interceptors\\token.interceptor.ts"],"sourcesContent":["\r\nimport { HttpInterceptorFn } from '@angular/common/http';\r\nimport { inject } from '@angular/core';\r\nimport { AuthService } from '../services/auth.service';\r\n\r\nexport const tokenInterceptor: HttpInterceptorFn = (req, next) => {\r\n  const authService = inject(AuthService);\r\n  const token = authService.getToken();\r\n\r\n  if (token) {\r\n    const authReq = req.clone({\r\n      headers: req.headers.set('Authorization', `Bearer ${token}`)\r\n    });\r\n    return next(authReq);\r\n  }\r\n\r\n  return next(req);\r\n};\r\n"],"mappings":"AAEA,SAASA,MAAM,QAAQ,eAAe;AACtC,SAASC,WAAW,QAAQ,0BAA0B;AAEtD,OAAO,MAAMC,gBAAgB,GAAsBA,CAACC,GAAG,EAAEC,IAAI,KAAI;EAC/D,MAAMC,WAAW,GAAGL,MAAM,CAACC,WAAW,CAAC;EACvC,MAAMK,KAAK,GAAGD,WAAW,CAACE,QAAQ,EAAE;EAEpC,IAAID,KAAK,EAAE;IACT,MAAME,OAAO,GAAGL,GAAG,CAACM,KAAK,CAAC;MACxBC,OAAO,EAAEP,GAAG,CAACO,OAAO,CAACC,GAAG,CAAC,eAAe,EAAE,UAAUL,KAAK,EAAE;KAC5D,CAAC;IACF,OAAOF,IAAI,CAACI,OAAO,CAAC;EACtB;EAEA,OAAOJ,IAAI,CAACD,GAAG,CAAC;AAClB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}