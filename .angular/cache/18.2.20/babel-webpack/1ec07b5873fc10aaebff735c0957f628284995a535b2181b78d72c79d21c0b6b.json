{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class SocietyService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'http://localhost:5000/api/societies';\n  }\n  getSocieties() {\n    return this.http.get(this.apiUrl);\n  }\n  getSociety(id) {\n    return this.http.get(`${this.apiUrl}/${id}`);\n  }\n  createSociety(society) {\n    return this.http.post(this.apiUrl, society);\n  }\n  updateSociety(id, society) {\n    return this.http.put(`${this.apiUrl}/${id}`, society);\n  }\n  deleteSociety(id) {\n    return this.http.delete(`${this.apiUrl}/${id}`);\n  }\n  static {\n    this.ɵfac = function SocietyService_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || SocietyService)(i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: SocietyService,\n      factory: SocietyService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["SocietyService","constructor","http","apiUrl","getSocieties","get","getSociety","id","createSociety","society","post","updateSociety","put","deleteSociety","delete","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Rajesh\\Angular\\FinTCS\\fintcs-new\\fintcs-2.0\\src\\app\\core\\services\\society.service.ts"],"sourcesContent":["\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { Society, CreateSocietyRequest } from '../../shared/models/society.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SocietyService {\r\n  private readonly apiUrl = 'http://localhost:5000/api/societies';\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getSocieties(): Observable<Society[]> {\r\n    return this.http.get<Society[]>(this.apiUrl);\r\n  }\r\n\r\n  getSociety(id: string): Observable<Society> {\r\n    return this.http.get<Society>(`${this.apiUrl}/${id}`);\r\n  }\r\n\r\n  createSociety(society: CreateSocietyRequest): Observable<Society> {\r\n    return this.http.post<Society>(this.apiUrl, society);\r\n  }\r\n\r\n  updateSociety(id: string, society: CreateSocietyRequest): Observable<Society> {\r\n    return this.http.put<Society>(`${this.apiUrl}/${id}`, society);\r\n  }\r\n\r\n  deleteSociety(id: string): Observable<void> {\r\n    return this.http.delete<void>(`${this.apiUrl}/${id}`);\r\n  }\r\n}\r\n"],"mappings":";;AASA,OAAM,MAAOA,cAAc;EAGzBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFP,KAAAC,MAAM,GAAG,qCAAqC;EAExB;EAEvCC,YAAYA,CAAA;IACV,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAY,IAAI,CAACF,MAAM,CAAC;EAC9C;EAEAG,UAAUA,CAACC,EAAU;IACnB,OAAO,IAAI,CAACL,IAAI,CAACG,GAAG,CAAU,GAAG,IAAI,CAACF,MAAM,IAAII,EAAE,EAAE,CAAC;EACvD;EAEAC,aAAaA,CAACC,OAA6B;IACzC,OAAO,IAAI,CAACP,IAAI,CAACQ,IAAI,CAAU,IAAI,CAACP,MAAM,EAAEM,OAAO,CAAC;EACtD;EAEAE,aAAaA,CAACJ,EAAU,EAAEE,OAA6B;IACrD,OAAO,IAAI,CAACP,IAAI,CAACU,GAAG,CAAU,GAAG,IAAI,CAACT,MAAM,IAAII,EAAE,EAAE,EAAEE,OAAO,CAAC;EAChE;EAEAI,aAAaA,CAACN,EAAU;IACtB,OAAO,IAAI,CAACL,IAAI,CAACY,MAAM,CAAO,GAAG,IAAI,CAACX,MAAM,IAAII,EAAE,EAAE,CAAC;EACvD;;;uCAvBWP,cAAc,EAAAe,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;IAAA;EAAA;;;aAAdlB,cAAc;MAAAmB,OAAA,EAAdnB,cAAc,CAAAoB,IAAA;MAAAC,UAAA,EAFb;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}